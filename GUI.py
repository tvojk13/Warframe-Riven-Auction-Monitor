# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(390, 205)
        MainWindow.setMinimumSize(QtCore.QSize(390, 205))
        MainWindow.setMaximumSize(QtCore.QSize(392, 205))
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("QMainWindow{\n"
" background-color: rgb(36, 35, 44);\n"
"}")
        MainWindow.setAnimated(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit.setGeometry(QtCore.QRect(10, 80, 371, 61))
        self.plainTextEdit.setStyleSheet("QPlainTextEdit {\n"
"    background-color: rgb(53, 53, 65);\n"
"    border: 0px solid;\n"
"    font-size: 15px;\n"
"    color:rgb(200, 200, 230) ;\n"
"    selection-background-color: rgb(36, 35, 44);\n"
"}\n"
"\n"
"QPlainTextEdit QScrollBar {\n"
"    backgroundr: rgb(53, 53, 65);\n"
"    border: 0px solid;\n"
"    width: 5px;\n"
"}\n"
"\n"
"QPlainTextEdit QScrollBar::handle {\n"
"    background-color: rgb(36, 35, 44);\n"
"    min-height: 30px;\n"
"}\n"
"\n"
"")
        self.plainTextEdit.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.plainTextEdit.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.plainTextEdit.setReadOnly(True)
        self.plainTextEdit.setPlainText("")
        self.plainTextEdit.setCenterOnScroll(False)
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.spinBox = QtWidgets.QSpinBox(self.centralwidget)
        self.spinBox.setGeometry(QtCore.QRect(260, 50, 121, 21))
        self.spinBox.setStyleSheet("QSpinBox{\n"
"    background-color: rgb(53, 53, 65);\n"
"    color:rgb(200, 200, 230);\n"
"    selection-background-color: rgb(36, 35, 44);\n"
"}\n"
"\n"
"QSpinBox::up-button {\n"
"    image: url(elements/arrow_up.png);\n"
"    background-color: rgb(36, 35, 44);\n"
"    weight: 9px;\n"
"}\n"
"\n"
"QSpinBox::up-button:pressed {\n"
"    background-color: rgb(43, 43, 55);\n"
"}\n"
"\n"
"QSpinBox::down-button {\n"
"    image: url(elements/arrow_down.png);\n"
"    background-color: rgb(36, 35, 44);\n"
"    height: 9px;\n"
"    weight: 9px;\n"
"}\n"
"\n"
"QSpinBox::down-button:pressed {\n"
"    background-color: rgb(43, 43, 55);\n"
"}")
        self.spinBox.setMinimum(1)
        self.spinBox.setMaximum(999999)
        self.spinBox.setProperty("value", 1)
        self.spinBox.setObjectName("spinBox")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(10, 50, 241, 21))
        self.comboBox.setAccessibleName("")
        self.comboBox.setAccessibleDescription("")
        self.comboBox.setStyleSheet("QComboBox {\n"
"    border: 0px solid;\n"
"    background-color: rgb(53, 53, 65);\n"
"    color:rgb(200, 200, 230);\n"
"}\n"
"\n"
"QComboBox QScrollBar {\n"
"    backgroundr: rgb(53, 53, 65);\n"
"    border: 0px solid;\n"
"    width: 5px;\n"
"}\n"
"\n"
"QComboBox QScrollBar::handle {\n"
"    background-color: rgb(36, 35, 44);\n"
"    min-height: 30px;\n"
"}\n"
"\n"
"QComboBox QListView {\n"
"    outline: none;\n"
"}\n"
"\n"
"QComboBox QAbstractItemView {\n"
"    border: 0px solid;\n"
"    background-color: rgb(53, 53, 65);\n"
"    color:rgb(200, 200, 230);\n"
"    selection-background-color: rgb(36, 35, 44);\n"
"}\n"
"\n"
"QComboBox::drop-down{\n"
"    background-color: rgb(36, 35, 44);\n"
"    width: 19px;\n"
"    height: 19px;\n"
"    border: 1px solid;\n"
"    border-color: rgb(53, 53, 65);\n"
"}\n"
"\n"
"QComboBox::drop-down:pressed{\n"
"    background-color: rgb(43, 43, 55);\n"
"}\n"
"\n"
"QComboBox::down-arrow {\n"
"    image: url(elements/arrow_down.png);\n"
"    width: 15px;\n"
"    height: 15px;\n"
"}")
        self.comboBox.setFrame(True)
        self.comboBox.setObjectName("comboBox")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(80, 20, 111, 31))
        self.label.setStyleSheet("    font-size: 15px;\n"
"    color:rgb(220, 223, 241);")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(280, 20, 91, 31))
        self.label_2.setStyleSheet("font-size: 15px;\n"
"color:rgb(220, 223, 241);")
        self.label_2.setObjectName("label_2")
        self.runTask = QtWidgets.QPushButton(self.centralwidget)
        self.runTask.setGeometry(QtCore.QRect(10, 150, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(-1)
        self.runTask.setFont(font)
        self.runTask.setAutoFillBackground(False)
        self.runTask.setStyleSheet("QPushButton {\n"
"    background-color: rgb(53, 53, 65);\n"
"    border: 1px;\n"
"    font-size: 20px;\n"
"    color:rgb(220, 223, 241);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(43, 43, 55);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(55, 55, 65);\n"
"}")
        self.runTask.setObjectName("runTask")
        self.stopTask = QtWidgets.QPushButton(self.centralwidget)
        self.stopTask.setGeometry(QtCore.QRect(200, 150, 181, 31))
        self.stopTask.setStyleSheet("QPushButton {\n"
"    background-color: rgb(53, 53, 65);\n"
"    border: 1px;\n"
"    font-size: 20px;\n"
"    color:rgb(220, 223, 241);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(43, 43, 55);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(55, 55, 65);\n"
"}")
        self.stopTask.setObjectName("stopTask")
        self.closeAppButton = QtWidgets.QPushButton(self.centralwidget)
        self.closeAppButton.setGeometry(QtCore.QRect(370, 0, 20, 20))
        self.closeAppButton.setStyleSheet("QPushButton {\n"
"    background-color: rgb(36, 35, 44);\n"
"    border: 1px;\n"
"    color:rgb(220, 223, 241);\n"
"    image: url(elements/cross.png);\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(180, 0, 0);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(180, 100, 100);\n"
"}")
        self.closeAppButton.setText("")
        self.closeAppButton.setObjectName("closeAppButton")
        self.minimizeAppButton = QtWidgets.QPushButton(self.centralwidget)
        self.minimizeAppButton.setGeometry(QtCore.QRect(350, 0, 20, 20))
        self.minimizeAppButton.setStyleSheet("QPushButton {\n"
"    background-color: rgb(36, 35, 44);\n"
"    border: 1px;\n"
"    color:rgb(220, 223, 241);\n"
"    image: url(elements/line.png)\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: rgb(46, 45, 54);\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: rgb(55, 55, 65);\n"
"}")
        self.minimizeAppButton.setText("")
        self.minimizeAppButton.setObjectName("minimizeAppButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setEnabled(False)
        self.statusbar.setSizeGripEnabled(False)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Select a weapon"))
        self.label_2.setText(_translate("MainWindow", "Set the price"))
        self.runTask.setText(_translate("MainWindow", "Run task"))
        self.stopTask.setText(_translate("MainWindow", "Stop task"))
